messages:
- content: You are an AI agent expert in writing unit tests. Your task is to write
    unit tests for the given code files of the repository. Make sure the tests can
    be executed without lint or compile errors.
  role: system
- content: "### Task Information\nBased on the source code, write/rewrite tests to\
    \ cover the source code.\nRepository: next\nSource File Path: packages/next/src/lib/typescript/writeAppTypeDeclarations.ts\n\
    Test File Path: test/unit/write-app-declarations.test.ts\nProject Programming\
    \ Language: typescript\nTesting Framework: Jest\n### Source File Content\n###\
    \ Source File Content:\nimport os from 'os'\nimport path from 'path'\nimport {\
    \ promises as fs } from 'fs'\n\nexport async function writeAppTypeDeclarations({\n\
    \  baseDir,\n  imageImportsEnabled,\n  hasPagesDir,\n  hasAppDir,\n}: {\n  baseDir:\
    \ string\n  imageImportsEnabled: boolean\n  hasPagesDir: boolean\n  hasAppDir:\
    \ boolean\n}): Promise<void> {\n  // Reference `next` types\n  const appTypeDeclarations\
    \ = path.join(baseDir, 'next-env.d.ts')\n\n  // Defaults EOL to system default\n\
    \  let eol = os.EOL\n  let currentContent: string | undefined\n\n  try {\n   \
    \ currentContent = await fs.readFile(appTypeDeclarations, 'utf8')\n    // If file\
    \ already exists then preserve its line ending\n    const lf = currentContent.indexOf('\\\
    n', /* skip first so we can lf - 1 */ 1)\n\n    if (lf !== -1) {\n      if (currentContent[lf\
    \ - 1] === '\\r') {\n        eol = '\\r\\n'\n      } else {\n        eol = '\\\
    n'\n      }\n    }\n  } catch {}\n\n  /**\n   * \"Triple-slash directives\" used\
    \ to create typings files for Next.js projects\n   * using Typescript .\n   *\n\
    \   * @see https://www.typescriptlang.org/docs/handbook/triple-slash-directives.html\n\
    \   */\n  const directives: string[] = [\n    // Include the core Next.js typings.\n\
    \    '/// <reference types=\"next\" />',\n  ]\n\n  if (imageImportsEnabled) {\n\
    \    directives.push('/// <reference types=\"next/image-types/global\" />')\n\
    \  }\n\n  if (hasAppDir && hasPagesDir) {\n    directives.push(\n      '/// <reference\
    \ types=\"next/navigation-types/compat/navigation\" />'\n    )\n  }\n\n  // Push\
    \ the notice in.\n  directives.push(\n    '',\n    '// NOTE: This file should\
    \ not be edited',\n    `// see https://nextjs.org/docs/${hasAppDir ? 'app' : 'pages'}/api-reference/config/typescript\
    \ for more information.`\n  )\n\n  const content = directives.join(eol) + eol\n\
    \n  // Avoids an un-necessary write on read-only fs\n  if (currentContent ===\
    \ content) {\n    return\n  }\n  await fs.writeFile(appTypeDeclarations, content)\n\
    }\n\n### Source File Dependency Files Content\n### Dependency File: empty.txt\n\
    \nOutput the complete test file, code only, no explanations.\n### Time\nCurrent\
    \ time: 2025-04-03 18:11:02\n"
  role: user
