messages:
- content: You are an AI agent expert in writing unit tests. Your task is to write
    unit tests for the given code files of the repository. Make sure the tests can
    be executed without lint or compile errors.
  role: system
- content: "### Task Information\nBased on the source code, write/rewrite tests to\
    \ cover the source code.\nRepository: NestJS\nSource File Path: packages/core/pipes/pipes-consumer.ts\n\
    Test File Path: packages/core/test/pipes/pipes-consumer.spec.ts\nProject Programming\
    \ Language: typescript\nTesting Framework: jest\n### Source File Content\n###\
    \ Source File Content:\nimport { RouteParamtypes } from '@nestjs/common/enums/route-paramtypes.enum';\n\
    import { ArgumentMetadata, PipeTransform } from '@nestjs/common/interfaces';\n\
    import { ParamsTokenFactory } from './params-token-factory';\n\nexport class PipesConsumer\
    \ {\n  private readonly paramsTokenFactory = new ParamsTokenFactory();\n\n  public\
    \ async apply<TInput = unknown>(\n    value: TInput,\n    { metatype, type, data\
    \ }: ArgumentMetadata,\n    pipes: PipeTransform[],\n  ) {\n    const token =\
    \ this.paramsTokenFactory.exchangeEnumForString(\n      type as any as RouteParamtypes,\n\
    \    );\n    return this.applyPipes(value, { metatype, type: token, data }, pipes);\n\
    \  }\n\n  public async applyPipes<TInput = unknown>(\n    value: TInput,\n   \
    \ { metatype, type, data }: { metatype: any; type?: any; data?: any },\n    transforms:\
    \ PipeTransform[],\n  ) {\n    return transforms.reduce(async (deferredValue,\
    \ pipe) => {\n      const val = await deferredValue;\n      const result = pipe.transform(val,\
    \ { metatype, type, data });\n      return result;\n    }, Promise.resolve(value));\n\
    \  }\n}\n\n### Source File Dependency Files Content\n### Dependency File: params-token-factory.ts\n\
    import { Paramtype } from '@nestjs/common';\nimport { RouteParamtypes } from '@nestjs/common/enums/route-paramtypes.enum';\n\
    \nexport class ParamsTokenFactory {\n  public exchangeEnumForString(type: RouteParamtypes):\
    \ Paramtype {\n    switch (type) {\n      case RouteParamtypes.BODY:\n       \
    \ return 'body';\n      case RouteParamtypes.PARAM:\n        return 'param';\n\
    \      case RouteParamtypes.QUERY:\n        return 'query';\n      default:\n\
    \        return 'custom';\n    }\n  }\n}\n\nOutput the complete test file, code\
    \ only, no explanations.\n### Time\nCurrent time: 2025-04-11 20:28:51\n"
  role: user
