import {expectType} from 'tsd';
import type {Includes} from '../source/includes';

declare function testIncludes<T extends readonly any[], U>(array: T, item: U): Includes<T, U>;

expectType<true>(testIncludes(['one', 'two', 'three'], 'one'));
expectType<true>(testIncludes(['one', 'two', 'three'], 'two'));
expectType<true>(testIncludes(['one', 'two', 'three'], 'three'));
expectType<false>(testIncludes(['one', 'two', 'three'], 'four'));
expectType<true>(testIncludes([1, 2, 3, 4, 5], 3));
expectType<false>(testIncludes([1, 2, 3, 4, 5], 6));
expectType<true>(testIncludes(['1', '2', '3', '4', '5'], '3'));
expectType<false>(testIncludes(['1', '2', '3', '4', '5'], 3));
expectType<true>(testIncludes(['1', '2', '3', '4', '5'], '3'));
expectType<false>(testIncludes(['1', '2', '3', '4', '5'], 3));
expectType<false>(testIncludes([], 3));
expectType<false>(testIncludes([], '3'));
expectType<true>(testIncludes([{}], {}));
expectType<true>(testIncludes([{}], {}));
expectType<true>(testIncludes([undefined], undefined));
expectType<false>(testIncludes([undefined], null));
expectType<true>(testIncludes([null], null));
expectType<true>(testIncludes([true], true));
expectType<false>(testIncludes([false], true));
expectType<true>(testIncludes([false], false));
expectType<false>(testIncludes([0], false));
expectType<true>(testIncludes([0], 0));
expectType<false>(testIncludes([1], 0));
expectType<true>(testIncludes(['string'], 'string'));
expectType<false>(testIncludes(['string'], 'otherstring'));
expectType<true>(testIncludes([[1, 2, 3]], [1, 2, 3]));
expectType<false>(testIncludes([[1, 2, 3]], [3, 2, 1]));
expectType<false>(testIncludes([[1, 2]], [1, 2, 3]));
expectType<false>(testIncludes([[1, 2, 3]], [1, 2]));
expectType<true>(testIncludes([{a: '1'}], {a: '1'}));
expectType<false>(testIncludes([{a: '1'}], {a: '2'}));
expectType<true>(testIncludes([{a: '1'}, {a: '2'}], {a: '1'}));
expectType<false>(testIncludes([{a: '1'}, {a: '2'}], {a: '3'}));
expectType<false>(testIncludes([{a: '1'}, {a: '2'}], {b: '1'}));
expectType<false>(testIncludes([1, 2], '1'));
expectType<false>(testIncludes(['1', '2'], 1));